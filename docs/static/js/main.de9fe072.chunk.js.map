{"version":3,"sources":["images/logo.png","images/Sanchez.png","images/morty.png","components/Header.js","components/Landing.js","components/Character.js","components/CharacterList.js","components/CharacterDetail.js","components/Filter.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","sanchez","alt","logo","morty","React","Component","Landing","to","title","type","Character","this","props","id","style","textDecoration","image","name","species","CharacterList","characterArray","length","characters","sort","a","b","map","item","key","renderContent","CharacterDetail","status","class","origin","episode","Filter","handleFilterText","bind","handleSubmit","ev","changeText","currentTarget","value","toLowerCase","preventDefault","onSubmit","htmlFor","placeholder","onChange","App","state","renderCharacterDetail","filter","fetch","listCharacters","then","response","json","data","setState","results","text","FetchCharacter","match","params","charSelected","find","parseInt","undefined","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de9fe072.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/Sanchez.c5b9c438.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.f31bf933.png\";","import React from 'react';\r\nimport logo from '../images/logo.png';\r\nimport sanchez from '../images/Sanchez.png';\r\nimport morty from '../images/morty.png';\r\nimport \"../stylesheets/layout/_header.scss\";\r\n\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n       <img className=\"image-Sanchez\" src={sanchez} alt=\"Rick\" />\r\n       <img className=\"image-logo\" src={logo} alt=\"Logo\" />\r\n       <img className=\"image-morty\" src={morty} alt=\"Morty\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../stylesheets/layout/_landing.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div\r\n          className='landing-img'\r\n          alt='Imagen Rick y Morty'\r\n        />\r\n         <Link to='/character' title='Comenzar la búsqueda'> \r\n             <button type=\"button\"className='landing-button' >\r\n                dale \r\n     </button></Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../stylesheets/layout/_character.scss';\r\n// Información sobre 20 personajes de la serie. De cada uno, vamos a pintar al menos:Foto, Nombre y Especie.\r\n\r\n\r\nclass Character extends React.Component{\r\n  render(){\r\n    return(\r\n      <>\r\n      {/* El siguiente link nos va a ayudar a vincular la tarjeta de cada personaje con la del Detail */}\r\n        <Link to={`/character/${this.props.id}`} style={{ textDecoration: 'none' }}>\r\n          <li className=\"character\">\r\n            <img src={this.props.image} alt=\"Foto del personaje\"></img>\r\n            <div className=\"details\">\r\n              <h3>Nombre: {this.props.name}</h3>\r\n              <h3>Especie: {this.props.species}</h3>\r\n            </div>\r\n          </li>\r\n        </Link>\r\n      </>\r\n    );\r\n   }\r\n}\r\n\r\nexport default Character;","import React from 'react';\r\nimport Character from './Character';\r\nimport '../stylesheets/layout/_charlist.scss';\r\n\r\n// Vamos a crear el listado de todos los personajes qeu nos llegan desde la Api. \r\nclass CharacterList extends React.Component {\r\n\r\n  renderContent(){\r\n    \r\n    if(this.props.characterArray == null || this.props.characterArray.length === 0){\r\n      return <p className=\"errorP\"> O este personaje no existe... o La Ciudadela lo ha encontrado antes... </p>\r\n      }else{\r\n        let characters = this.props.characterArray.sort(function(a, b){\r\n          if(a.name < b.name) { return -1; }\r\n          if(a.name > b.name) { return 1; }\r\n          return 0;\r\n         }).map( item => {\r\n          return (\r\n            <Character\r\n              key= {item.id}\r\n              id= {item.id}\r\n              image={item.image}\r\n              name={item.name}\r\n              species={item.species}\r\n            />\r\n           );\r\n         });\r\n         return <ul className=\"characterList\">{characters}</ul>\r\n       }\r\n  }\r\n\r\n render(){\r\n    return(\r\n     <div className=\"list-wrapper\">\r\n       {this.renderContent()}\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../stylesheets/layout/_detail.scss';\r\n\r\nclass CharacterDetail extends React.Component{\r\n render(){\r\n   let status = <i class=\"far fa-smile\"></i>;\r\n     if( this.props.status !== \"Alive\"){\r\n       status = <i class=\"fas fa-skull-crossbones\"></i>;\r\n      }else if( this.props.status === \"unknown\"){\r\n       status = <i class=\"fas fa-question\"></i>;\r\n    }\r\n   let species = <i class=\"fas fa-user-alt\"></i>;\r\n      if (this.props.species !== \"Human\"){\r\n        species = <i class=\"fab fa-reddit-alien\"></i>;\r\n      }\r\n   return(\r\n     <div className=\"character-detail\">\r\n       <div className=\"card\">\r\n         <div className=\"card-btn\" > \r\n           <Link to='/character'>\r\n             <button className=\"btn-back\"> X </button>\r\n           </Link>\r\n         </div>\r\n         <li className=\"details-wrapper\">\r\n            <img src={this.props.image} alt=\"Foto del personaje\"></img>\r\n            <div className=\"details\">\r\n             <h3>Nombre: {this.props.name}</h3>\r\n             <section className=\"characteristics\">\r\n               <h4>Especie: {species}</h4>\r\n               <h4>Planeta de origen: {this.props.origin}</h4>\r\n               <h4>Episodios en los que aparece: {this.props.episode}</h4>\r\n               <h4>Estado: {status}</h4>\r\n             </section>\r\n           </div>\r\n         </li>\r\n        </div>\r\n      </div>\r\n   )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CharacterDetail;","import React from 'react';\r\nimport '../stylesheets/layout/_filter.scss';\r\n\r\nclass Filter extends React.Component{\r\n  //tenemos que crear el constructor donde va el handler del onchage y bindearlo.\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFilterText = this.handleFilterText.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  //creamos el evento del cambio\r\n  handleFilterText(ev){\r\n    this.props.changeText(ev.currentTarget.value.toLowerCase());\r\n  }\r\n\r\n  handleSubmit(ev){\r\n     ev.preventDefault();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form className=\"form-wrapper\" onSubmit= {this.handleSubmit}>\r\n        <label className='label' htmlFor='name'>\r\n          Busca un personaje:\r\n        </label>\r\n        <input \r\n         type='text' className='name' \r\n         placeholder= 'personaje'\r\n         id='name' \r\n         onChange={this.handleFilterText} \r\n        />\r\n      </form>\r\n    );\r\n   }\r\n}\r\n\r\nexport default Filter;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/layout/App.scss';\nimport Header from './Header';\nimport Landing from './Landing';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Filter from './Filter';\n\n//Api limpia desde donde conseguimos la lista de personajes.\n\nconst listCharacters = 'https://rickandmortyapi.com/api/character/?';\n\nclass App extends React.Component{\n  constructor (props){\n   super(props);\n   this.state ={\n   //Aquí colocamos todo lo que queremos guardar vacío.\n      characters: []\n    } \n    //bindeamos los handlers que se van creando.\n    this.handleFilterText = this.handleFilterText.bind(this);\n    this.renderCharacterDetail =this.renderCharacterDetail.bind(this);\n  }\n  \n   //El fetch.\n  FetchCharacter(filter){\n    fetch(listCharacters + 'name=' + filter)\n      .then((response) => response.json())\n      .then(data =>{\n        this.setState({characters : data.results});\n      });\n  }      \n\n   //Tenemos que cambiar el estado por los handlers que nos llegan desde el filter.\n   handleFilterText(text){\n    this.FetchCharacter(text);\n  }\n\n\n  renderCharacterDetail (props){\n    // busco si el id está en el objeto del estado.\n    let key = props.match.params.id;\n    let charSelected = this.state.characters.find(\n      (item) => {\n       return item.id === parseInt(key);\n       });\n        if(charSelected === undefined){\n          return (<> </>)\n        }else {\n       //Si está pinto el objeto \n          return (\n           <CharacterDetail \n             image= {charSelected.image} \n             name= {charSelected.name}\n             species= {charSelected.species} \n             origin= {charSelected.origin.name} \n             episode= {charSelected.episode.length} \n             status= {charSelected.status}>\n            </CharacterDetail>\n          )\n        }\n  }\n  render(){\n   return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/character\">\n          <Header />\n           <Filter changeText={this.handleFilterText}></Filter>\n           <CharacterList characterArray ={this.state.characters}></CharacterList>\n           <Switch>\n             <Route exact path='/character/:id' render={this.renderCharacterDetail}/>\n           </Switch>\n          </Route>\n        </Switch>  \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}